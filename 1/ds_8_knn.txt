Knn=====================

# Pract-8
import numpy as np 
import pandas as pd 
from matplotlib import pyplot as plt 
from sklearn.datasets import load_breast_cancer 
from sklearn.metrics import confusion_matrix 
from sklearn.neighbors import KNeighborsClassifier 
from sklearn.model_selection import train_test_split 
import seaborn as sns 
sns.set() 
breast_cancer=load_breast_cancer() 
x=pd.DataFrame(breast_cancer.data,columns=breast_cancer.feature_names) 
x.head()


x=x[["mean area","mean compactness"]] 
x.head()


x.info()


y=pd.Categorical.from_codes(breast_cancer.target,breast_cancer.target_names) 
print(y) 


y=pd.get_dummies(y,drop_first=True) 
print(y) 


x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=1) 
knn=KNeighborsClassifier(n_neighbors=5,metric="euclidean") 
knn.fit(x_train,y_train) 
sns.scatterplot(x="mean area",y="mean compactness",hue="benign",data=x_test.join(y_test,how="outer")) 
y_pred=knn.predict(x_test) 
plt.scatter(x_test["mean area"],x_test["mean compactness"],c=y_pred,cmap="coolwarm",alpha=0.7) 


plt.scatter(x_test["mean area"], x_test["mean compactness"], c = y_pred, cmap="coolwarm", alpha=0.7)


cf=confusion_matrix(y_test,y_pred) 
print(cf)


labels=["True Negative","False Positive","False Negatve","True Positive"] 
labels=np.asarray(labels).reshape(2,2) 
categories=['Zero','One'] 
ax=plt.subplot() 
sns.heatmap(cf,annot=True,ax=ax) 
ax.set_xlabel("Predicted Values") 
ax.set_ylabel("True Values") 
ax.set_title("Confusion Matrix") 
ax.xaxis.set_ticklabels(["Malignant","Benign"]) 
ax.yaxis.set_ticklabels(["Malignant","Benign"])


tp,fn,fp,tn=confusion_matrix(y_test,y_pred,labels=[1,0]).reshape(-1) 
print("Values for TP,FN,FP,TN:",tp,fn,fp,tn) 


Accuracy=(tp+tn)/(tp+tn+fp+fn) 
print(Accuracy) 


from sklearn.metrics import f1_score 
f1_score(y_test,y_pred)


from sklearn.metrics import roc_auc_score 
print(roc_auc_score(y_test,y_pred))






